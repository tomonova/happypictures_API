//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OICAR19_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HappyPicturesDbContext : DbContext, HappyPicturesDbContext_UnitTest
    {
        public HappyPicturesDbContext()
            : base("name=HappyPicturesDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CARD> CARDS { get; set; }
        public virtual DbSet<FORMAT> FORMATS { get; set; }
        public virtual DbSet<IMAGE> IMAGES { get; set; }
        public virtual DbSet<LIKE> LIKES { get; set; }
        public virtual DbSet<PROFILE> PROFILES { get; set; }
        public virtual DbSet<SCHEDULE_IMAGE> SCHEDULE_IMAGE { get; set; }
        public virtual DbSet<SCHEDULE> SCHEDULES { get; set; }
        public virtual DbSet<STORy> STORIES { get; set; }
        public virtual DbSet<STORY_CARD> STORY_CARD { get; set; }
        public virtual DbSet<TAG> TAGS { get; set; }

        public DbSet<IMAGE> Images { get; set; }

        public DbSet<STORy> Stories { get; set; }

        public virtual ObjectResult<CreateUserID_Result> CreateUserID(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CreateUserID_Result>("CreateUserID", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAdminID(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAdminID", emailParameter);
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser", emailParameter);
        }
    
        public virtual int ReturnUserID(string email, ObjectParameter userid)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReturnUserID", emailParameter, userid);
        }
    
        public virtual int DeleteUnassignedTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUnassignedTags");
        }
    
        public virtual int DeleteUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userIDParameter);
        }
    
        public virtual int ShareStory(Nullable<int> userID, Nullable<int> storyID, string adminAccount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var storyIDParameter = storyID.HasValue ?
                new ObjectParameter("storyID", storyID) :
                new ObjectParameter("storyID", typeof(int));
    
            var adminAccountParameter = adminAccount != null ?
                new ObjectParameter("adminAccount", adminAccount) :
                new ObjectParameter("adminAccount", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShareStory", userIDParameter, storyIDParameter, adminAccountParameter);
        }

        public void MarkAsModified(IMAGE item)
        {
            Entry(item).State = EntityState.Modified;
        }
    }
}
